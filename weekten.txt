header.component.html:
-----------------------------------------------------------------
<nav class="navbar navbar-expand-lg bg-body-tertiary">
    <div class="container-fluid">
      <a class="navbar-brand" [routerLink]="['/']">SPA DEMO</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" [routerLinkActiveOptions]="{exact:true}" routerLinkActive="active" [routerLink]="['/']">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" [routerLinkActiveOptions]="{exact:true}" routerLinkActive="active" [routerLink]="['/profile']">Profile</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>
  


header.component.ts:
--------------------------------------------------------------------
import { Component } from '@angular/core';
import { RouterModule } from '@angular/router';
@Component({
  selector: 'app-header',
  imports: [RouterModule],
  templateUrl: './header.component.html',
  styleUrl: './header.component.css'
})
export class HeaderComponent {

}


home.component.html:
---------------------------------------------------------------------
<section class="container mt-5 text-center">
    <h1>Welcome to Rest-API Demo Page</h1></section>

profile.component.html:
---------------------------------------------------------------------
<div class="card shadow-sm w-50 mt-5 p-2 mx-auto"*ngIf="user">
    <img class="avatar d-block mx-auto" src="https://igimage.indiaglitz.com/tamil/home/vathiraid-1432020m1.jpg" alt="Icon"/>
    <h2 class="text-center">Hi,{{user.name}}</h2>
    <table class="table table-bordered mt-3">
        <tr>
            <th>Username</th>
            <td>{{user.username}}</td>
        </tr>
        <tr>
            <th>Email</th>
            <td>{{user.email}}</td>
        </tr>
        <tr>
            <th>Phone</th>
            <td>{{user.phone}}</td>
        </tr>
        <tr>
            <th>City</th>
            <td>{{user.address?.city}}</td>
        </tr>
        <tr>
            <th>ZIP Code</th>
            <td>{{user.address?.zipcode}}</td>
        </tr>
        <tr>
            <th>Website</th>
            <td>{{user.website}}</td>
        </tr>
    </table>
</div>


profile.component.ts:
---------------------------------------------------------------------

import { Component,OnInit } from '@angular/core';
import { HttpClient,HttpClientModule } from '@angular/common/http';
import { CommonModule } from '@angular/common';

@Component({
  selector: 'app-profile',
  imports: [CommonModule,HttpClientModule],
  templateUrl: './profile.component.html',
  styleUrl: './profile.component.css'
})
export class ProfileComponent implements OnInit{
  user:any;
  constructor(private http:HttpClient){}
  ngOnInit(): void {
    this.http.get('https://jsonplaceholder.typicode.com/users/1').subscribe((data:any)=>{
      console.log(data);
      this.user=data;
    });
  }
}


profile.component.css:
---------------------------------------------------------------------
.avatar{
    width:150px;
    height: 150px;
    border: radius 200px;
}
th,td{
    padding: 10px;
}


app.component.html:
---------------------------------------------------------------------
<app-header></app-header>
<router-outlet></router-outlet>

app.component.ts:
---------------------------------------------------------------------
import { Component } from '@angular/core';
import { RouterOutlet, RouterModule } from '@angular/router';
import { HeaderComponent } from './header/header.component';
@Component({
  selector: 'app-root',
  imports: [RouterOutlet,HeaderComponent,RouterModule],
  templateUrl: './app.component.html',
  styleUrl: './app.component.css'
})
export class AppComponent {
  title = 'spa';
}

app.routes.ts:
-----------------------------------------------------------------------
import { Routes } from '@angular/router';
import { HomeComponent } from './home/home.component';
import { ProfileComponent } from './profile/profile.component';

export const routes: Routes = [
    {
        path:'',
        component:HomeComponent,
        title:"Home"
    },
    {
        path:'profile',
        component:ProfileComponent,
        title:"Profile"
    }
];


index.html:
-------------------------------------------------------------------------

<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>Spa</title>
  <base href="/">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="icon" type="image/x-icon" href="favicon.ico">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/js/bootstrap.bundle.min.js" integrity="sha384-k6d4wzSIapyDyv1kpU366/PK5hCdSbCRGRCMv+eplOQJWyd1fbcAu9OCUj5zNLiq" crossorigin="anonymous"></script>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-SgOJa3DmI69IUzQ2PVdRZhwQ+dy64/BUtbMJw1MZ8t5HZApcHrRKUc4W0kG879m7" crossorigin="anonymous">
</head>
<body>
  <app-root></app-root>
</body>
</html>

____________________________________________________________________________

Steps:

1. Open your desired folder in the Command Prompt (CMD).
2. Install the Angular CLI globally using the command: npm install -g @angular/cli
3. Create a new Angular project named "spa" using the command: ng new spa
4. During project setup, choose CSS as the stylesheet format and decline to enable server-side rendering (SSR).
5. Navigate to the newly created project directory using the command: cd spa
6. Generate three components: header, home, and profile, using the following commands:
	*ng generate component header (or ng g c header)
	*ng generate component home (or ng g c home)
	*ng generate component profile (or ng g c profile)
7. Modify the code within the generated component files (header, home, profile), as needed.
8. Start the development server using the command: ng serve
9. Open the provided link (usually http://localhost:4200/) in your web browser to view the application.
